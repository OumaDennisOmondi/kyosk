name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io/${{ github.repository }}
  RUN_NUMBER: ${{ github.run_number }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Test Backend
      run: |
        cd backend
        ./mvnw test

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Test Frontend
      run: |
        cd frontend
        npm ci
        npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build Backend
      run: |
        cd backend
        ./mvnw clean package

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Backend Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ env.REGISTRY }}/kyosk-backend:${{ env.RUN_NUMBER }}

    - name: Build and Push Frontend Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ env.REGISTRY }}/kyosk-frontend:${{ env.RUN_NUMBER }}

    - name: Update Kubernetes Manifests
      run: |
        pip install yq
        yq eval '.spec.template.spec.containers[0].image = "${{ env.REGISTRY }}/kyosk-backend:${{ env.RUN_NUMBER }}"' -i k8s/deployment.yaml
        yq eval '.spec.template.spec.containers[1].image = "${{ env.REGISTRY }}/kyosk-frontend:${{ env.RUN_NUMBER }}"' -i k8s/deployment.yaml
